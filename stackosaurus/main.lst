main                                                                                                                    PAGE 1
  00A0                   1     JUMP_KEY        equ     P2.0
                         2
  0020                   3     VAR             equ     20h
  0001                   4     AIRTIME     equ VAR.1
  0002                   5     BLOCK_POS       equ     VAR.2
  0003                   6     SCORE       equ VAR.3
                         7
                         8     ; game_loop:
                         9     ; shift block position
                        10     ; decr airtime
                        11     ; check for jump input
                        12     ; animate everything
                        13     ; inc score
                        14
                        15     init:
0000 758000             16         mov     P0, #0
0003 759000             17         mov     P1, #0
0006 75A0FF             18             mov         P2, #0FFh
0009 75B000             19             mov     P3, #0
000C C2F0               20             clr     B.0
000E 750100             21             mov         AIRTIME, #0
0011 750201             22             mov         BLOCK_POS, #000000001b ; pos is instantly shifted left
0014 750300             23             mov         SCORE, #0
                        24
                        25             ; jmp to game start
0017 02001A             26             jmp         shift_block_pos
                        27
                        28     shift_block_pos:
001A E502               29             mov         A, BLOCK_POS
001C 23                 30             rl          A
001D F502               31             mov         BLOCK_POS, A
                        32
001F 020022             33             jmp         update_airtime
                        34
                        35     update_airtime:
0022 E501               36             mov         A, AIRTIME
0024 B40003             37             cjne    A, #0, decr_airtime
0027 02002F             38             jmp         check_jump_input
                        39
                        40     decr_airtime:
002A 1501               41             dec         AIRTIME
002C 02002F             42             jmp         check_jump_input
                        43
                        44     check_jump_input:
                        45             ; if airtime not 0 you cannot jump
002F E501               46             mov     A, AIRTIME
0031 B4000E             47             cjne    A, #0, animate_player
                        48
0034 E5A0               49             mov         A, P2
0036 75A0FF             50             mov         P2, #0FFh
                        51
                        52             ; no jump input
0039 B4FE06             53             cjne    A, #11111110b, animate_player
                        54
003C 750103             55             mov         AIRTIME, #3
                        56
003F 020042             57             jmp         animate_player
                        58
                        59     animate_player:
0042 758000             60             mov         P0, #0              ; prevents early values
                        61
0045 E501               62             mov         A, AIRTIME
0047 B40009             63             cjne    A, #0, check_1
                        64
                        65             ; animate player on ground
004A 759040             66             mov         P1, #01000000b
004D 758006             67             mov         P0, #00000110b
0050 020071             68             jmp         animate_block
                        69
                        70     check_1:
0053 B40103             71             cjne    A, #1, check_3
0056 02005F             72             jmp         animate_player_air_1
                        73
                        74     check_3:
0059 B4030C             75             cjne    A, #3, animate_player_air_2
005C 02005F             76             jmp         animate_player_air_1
                        77
                        78     animate_player_air_1:
                        79             ; animate player one pixel in air
005F 759040             80             mov         P1, #01000000b
0062 75800C             81             mov         P0, #00001100b
                        82
0065 020071             83             jmp         animate_block
                        84
                        85     animate_player_air_2:
                        86             ; animate player two pixels in air
0068 759040             87             mov         P1, #01000000b
006B 758018             88             mov         P0, #00011000b
006E 020071             89             jmp         animate_block
                        90
                        91     animate_block:
                        92         ; if player in air, no collision
0071 E501               93             mov         A, AIRTIME
0073 B40014             94             cjne    A, #0, animate_block_normal
                        95
                        96             ; if player on ground and block on player x pos, collision else animate block and player bott
0076 E502               97             mov         A, BLOCK_POS
0078 B44003             98             cjne    A, #01000000b, animate_block_bottom_player
                        99
007B 0200A6            100             jmp         game_over
                       101
                       102     animate_block_bottom_player:
007E 758002            103         mov     P0, #00000010b
0081 E502              104         mov     A, BLOCK_POS
0083 D2E6              105         setb    A.6
0085 F590              106             mov         P1, A
                       107
0087 020096            108             jmp         animate_floor
                       109
                       110     animate_block_normal:
008A 758000            111             mov         P0, #0
008D 850290            112             mov         P1, BLOCK_POS
0090 758002            113             mov         P0, #00000010b
                       114
0093 020096            115             jmp         animate_floor
                       116
                       117     animate_floor:
0096 758000            118             mov         P0, #0
0099 7590FF            119             mov         P1, #11111111b
009C 758001            120             mov         P0, #00000001b
                       121
009F 0200A2            122             jmp         inc_score
                       123
                       124     inc_score:
00A2 0503              125             inc         SCORE
00A4 011A              126             jmp         shift_block_pos
                       127
                       128
                       129     game_over:
00A6 758000            130             mov         P0, #0
00A9 759000            131             mov         P1, #0
                       132
00AC 0200AF            133             jmp     calc_score_digits
                       134
                       135     calc_score_digits:
                       136         ; calculate digits
00AF E503              137         mov     A, SCORE
00B1 75F064            138         mov     B, #100
00B4 84                139         div     AB              ; A: hundreds, B: remainder
00B5 F9                140         mov     R1, A           ; R1: hundreds digit
00B6 ACF0              141         mov     R4, B           ; R4: remainder
                       142
00B8 EC                143         mov     A, R4           ; A: remainder
00B9 75F00A            144         mov     B, #10
00BC 84                145         div     AB              ; A: tens, B: units
00BD FA                146         mov     R2, A           ; R2: tens digit
00BE ABF0              147         mov     R3, B           ; R3: units digit
                       148
                       149         ; get hex value for digits
00C0 9000F5            150         mov     DPTR, #segment_table
00C3 E9                151         mov     A, R1
00C4 93                152         movc    A, @A+DPTR
00C5 FD                153         mov     R5, A           ; R5: hundreds
                       154
00C6 9000F5            155         mov     DPTR, #segment_table
00C9 EA                156         mov     A, R2
00CA 93                157         movc    A, @A+DPTR
00CB FE                158         mov     R6, A           ; R6: tens
                       159
00CC 9000F5            160         mov     DPTR, #segment_table
00CF EB                161         mov     A, R3
00D0 93                162         movc    A, @A+DPTR
00D1 FF                163         mov     R7, A           ; R7: units
                       164
00D2 0200D5            165         jmp     show_score_0
                       166
                       167     show_score_0:
00D5 758000            168         mov     P0, #0
00D8 8DB0              169         mov     P3, R5
00DA 758004            170             mov     P0, #00000100b ; activate hundreds
                       171
00DD 0200E0            172         jmp     show_score_1
                       173
                       174     show_score_1:
00E0 758000            175         mov     P0, #0
00E3 8EB0              176         mov     P3, R6
00E5 758002            177             mov     P0, #00000010b ; activate tens
                       178
00E8 0200EB            179         jmp     show_score_2
                       180
                       181     show_score_2:
00EB 758000            182         mov     P0, #0
00EE 8FB0              183         mov     P3, R7
00F0 758001            184             mov     P0, #00000001b ; activate units
                       185
00F3 80E0              186         jmp     show_score_0
                       187
                       188     ; lookup table for 7-segment display(ABCDEFG0)
                       189     segment_table:
00F5 FC                190         db     0FCH ; 0 = 11111100
00F6 60                191         db     060H ; 1 = 01100000
00F7 DA                192         db     0DAH ; 2 = 11011010
00F8 F2                193         db     0F2H ; 3 = 11110010
00F9 66                194         db     066H ; 4 = 01100110
00FA B6                195         db     0B6H ; 5 = 10110110
00FB BE                196         db     0BEH ; 6 = 10111110
00FC E0                197         db     0E0H ; 7 = 11100000
00FD FE                198         db     0FEH ; 8 = 11111110
00FE F6                199         db     0F6H ; 9 = 11110110
                       200
                       201     end
ASSEMBLY COMPLETE, NO ERRORS FOUND, NO WARNINGS


SYMBOL TABLE:
??MCU_8051_IDE . . . . . . . . . . .  N  NUMB  8051H  NOT USED
??VERSION. . . . . . . . . . . . . .  N  NUMB  0149H  NOT USED
AC . . . . . . . . . . . . . . . . .  B  ADDR  00D6H  NOT USED
ACC. . . . . . . . . . . . . . . . .  D  ADDR  00E0H  NOT USED
ACSR . . . . . . . . . . . . . . . .  D  ADDR  0097H  NOT USED
ADCF . . . . . . . . . . . . . . . .  D  ADDR  00F6H  NOT USED
ADCLK. . . . . . . . . . . . . . . .  D  ADDR  00F2H  NOT USED
ADCON. . . . . . . . . . . . . . . .  D  ADDR  00F3H  NOT USED
ADDH . . . . . . . . . . . . . . . .  D  ADDR  00F5H  NOT USED
ADDL . . . . . . . . . . . . . . . .  D  ADDR  00F4H  NOT USED
AIRTIME. . . . . . . . . . . . . . .  N  NUMB  0001H
ANIMATE_BLOCK. . . . . . . . . . . .  C  ADDR  0071H
ANIMATE_BLOCK_BOTTOM_PLAYER. . . . .  C  ADDR  007EH
ANIMATE_BLOCK_NORMAL . . . . . . . .  C  ADDR  008AH
ANIMATE_FLOOR. . . . . . . . . . . .  C  ADDR  0096H
ANIMATE_PLAYER . . . . . . . . . . .  C  ADDR  0042H
ANIMATE_PLAYER_AIR_1 . . . . . . . .  C  ADDR  005FH
ANIMATE_PLAYER_AIR_2 . . . . . . . .  C  ADDR  0068H
AUXR . . . . . . . . . . . . . . . .  D  ADDR  008EH  NOT USED
AUXR1. . . . . . . . . . . . . . . .  D  ADDR  00A2H  NOT USED
B. . . . . . . . . . . . . . . . . .  D  ADDR  00F0H
BDRCON . . . . . . . . . . . . . . .  D  ADDR  009BH  NOT USED
BDRCON_1 . . . . . . . . . . . . . .  D  ADDR  009CH  NOT USED
BLOCK_POS. . . . . . . . . . . . . .  N  NUMB  0002H
BRL. . . . . . . . . . . . . . . . .  D  ADDR  009AH  NOT USED
CALC_SCORE_DIGITS. . . . . . . . . .  C  ADDR  00AFH
CCAP0H . . . . . . . . . . . . . . .  D  ADDR  00FAH  NOT USED
CCAP0L . . . . . . . . . . . . . . .  D  ADDR  00EAH  NOT USED
CCAP1H . . . . . . . . . . . . . . .  D  ADDR  00FBH  NOT USED
CCAP1L . . . . . . . . . . . . . . .  D  ADDR  00EBH  NOT USED
CCAP2H . . . . . . . . . . . . . . .  D  ADDR  00FCH  NOT USED
CCAP3H . . . . . . . . . . . . . . .  D  ADDR  00FDH  NOT USED
CCAP4H . . . . . . . . . . . . . . .  D  ADDR  00FEH  NOT USED
CCAPL2H. . . . . . . . . . . . . . .  D  ADDR  00FCH  NOT USED
CCAPL2L. . . . . . . . . . . . . . .  D  ADDR  00ECH  NOT USED
CCAPL3H. . . . . . . . . . . . . . .  D  ADDR  00FDH  NOT USED
CCAPL3L. . . . . . . . . . . . . . .  D  ADDR  00EDH  NOT USED
CCAPL4H. . . . . . . . . . . . . . .  D  ADDR  00FEH  NOT USED
CCAPL4L. . . . . . . . . . . . . . .  D  ADDR  00EEH  NOT USED
CCAPM0 . . . . . . . . . . . . . . .  D  ADDR  00DAH  NOT USED
CCAPM1 . . . . . . . . . . . . . . .  D  ADDR  00DBH  NOT USED
CCAPM2 . . . . . . . . . . . . . . .  D  ADDR  00DCH  NOT USED
CCAPM3 . . . . . . . . . . . . . . .  D  ADDR  00DDH  NOT USED
CCAPM4 . . . . . . . . . . . . . . .  D  ADDR  00DEH  NOT USED
CCF0 . . . . . . . . . . . . . . . .  B  ADDR  00D8H  NOT USED
CCF1 . . . . . . . . . . . . . . . .  B  ADDR  00D9H  NOT USED
CCF2 . . . . . . . . . . . . . . . .  B  ADDR  00DAH  NOT USED
CCF3 . . . . . . . . . . . . . . . .  B  ADDR  00DBH  NOT USED
CCF4 . . . . . . . . . . . . . . . .  B  ADDR  00DCH  NOT USED
CCON . . . . . . . . . . . . . . . .  D  ADDR  00D8H  NOT USED
CFINT. . . . . . . . . . . . . . . .  C  ADDR  0033H  NOT USED
CH . . . . . . . . . . . . . . . . .  D  ADDR  00F9H  NOT USED
CHECK_1. . . . . . . . . . . . . . .  C  ADDR  0053H
CHECK_3. . . . . . . . . . . . . . .  C  ADDR  0059H
CHECK_JUMP_INPUT . . . . . . . . . .  C  ADDR  002FH
CKCON. . . . . . . . . . . . . . . .  D  ADDR  008FH  NOT USED
CKCON0 . . . . . . . . . . . . . . .  D  ADDR  008FH  NOT USED
CKRL . . . . . . . . . . . . . . . .  D  ADDR  0097H  NOT USED
CKSEL. . . . . . . . . . . . . . . .  D  ADDR  0085H  NOT USED
CL . . . . . . . . . . . . . . . . .  D  ADDR  00E9H  NOT USED
CLKREG . . . . . . . . . . . . . . .  D  ADDR  008FH  NOT USED
CMOD . . . . . . . . . . . . . . . .  D  ADDR  00D9H  NOT USED
CPRL2. . . . . . . . . . . . . . . .  B  ADDR  00C8H  NOT USED
CR . . . . . . . . . . . . . . . . .  B  ADDR  00DEH  NOT USED
CT2. . . . . . . . . . . . . . . . .  B  ADDR  00C9H  NOT USED
CY . . . . . . . . . . . . . . . . .  B  ADDR  00D7H  NOT USED
DECR_AIRTIME . . . . . . . . . . . .  C  ADDR  002AH
DP0H . . . . . . . . . . . . . . . .  D  ADDR  0083H  NOT USED
DP0L . . . . . . . . . . . . . . . .  D  ADDR  0082H  NOT USED
DP1H . . . . . . . . . . . . . . . .  D  ADDR  0085H  NOT USED
DP1L . . . . . . . . . . . . . . . .  D  ADDR  0084H  NOT USED
DPH. . . . . . . . . . . . . . . . .  D  ADDR  0083H  NOT USED
DPL. . . . . . . . . . . . . . . . .  D  ADDR  0082H  NOT USED
EA . . . . . . . . . . . . . . . . .  B  ADDR  00AFH  NOT USED
EC . . . . . . . . . . . . . . . . .  B  ADDR  00AEH  NOT USED
EECON. . . . . . . . . . . . . . . .  D  ADDR  0096H  NOT USED
ES . . . . . . . . . . . . . . . . .  B  ADDR  00ACH  NOT USED
ET0. . . . . . . . . . . . . . . . .  B  ADDR  00A9H  NOT USED
ET1. . . . . . . . . . . . . . . . .  B  ADDR  00ABH  NOT USED
ET2. . . . . . . . . . . . . . . . .  B  ADDR  00ADH  NOT USED
EX0. . . . . . . . . . . . . . . . .  B  ADDR  00A8H  NOT USED
EX1. . . . . . . . . . . . . . . . .  B  ADDR  00AAH  NOT USED
EXEN2. . . . . . . . . . . . . . . .  B  ADDR  00CBH  NOT USED
EXF2 . . . . . . . . . . . . . . . .  B  ADDR  00CEH  NOT USED
EXTI0. . . . . . . . . . . . . . . .  C  ADDR  0003H  NOT USED
EXTI1. . . . . . . . . . . . . . . .  C  ADDR  0013H  NOT USED
F0 . . . . . . . . . . . . . . . . .  B  ADDR  00D5H  NOT USED
FE . . . . . . . . . . . . . . . . .  B  ADDR  009FH  NOT USED
GAME_OVER. . . . . . . . . . . . . .  C  ADDR  00A6H
IE . . . . . . . . . . . . . . . . .  D  ADDR  00A8H  NOT USED
IE0. . . . . . . . . . . . . . . . .  B  ADDR  0089H  NOT USED
IE1. . . . . . . . . . . . . . . . .  B  ADDR  008BH  NOT USED
INC_SCORE. . . . . . . . . . . . . .  C  ADDR  00A2H
INIT . . . . . . . . . . . . . . . .  C  ADDR  0000H  NOT USED
INT0 . . . . . . . . . . . . . . . .  B  ADDR  00B2H  NOT USED
INT1 . . . . . . . . . . . . . . . .  B  ADDR  00B3H  NOT USED
IP . . . . . . . . . . . . . . . . .  D  ADDR  00B8H  NOT USED
IPH. . . . . . . . . . . . . . . . .  D  ADDR  00B7H  NOT USED
IPH0 . . . . . . . . . . . . . . . .  D  ADDR  00B7H  NOT USED
IPH1 . . . . . . . . . . . . . . . .  D  ADDR  00B3H  NOT USED
IPL0 . . . . . . . . . . . . . . . .  D  ADDR  00B8H  NOT USED
IPL1 . . . . . . . . . . . . . . . .  D  ADDR  00B2H  NOT USED
IT0. . . . . . . . . . . . . . . . .  B  ADDR  0088H  NOT USED
IT1. . . . . . . . . . . . . . . . .  B  ADDR  008AH  NOT USED
JUMP_KEY . . . . . . . . . . . . . .  N  NUMB  00A0H  NOT USED
KBE. . . . . . . . . . . . . . . . .  D  ADDR  009DH  NOT USED
KBF. . . . . . . . . . . . . . . . .  D  ADDR  009EH  NOT USED
KBLS . . . . . . . . . . . . . . . .  D  ADDR  009CH  NOT USED
OSCCON . . . . . . . . . . . . . . .  D  ADDR  0086H  NOT USED
OV . . . . . . . . . . . . . . . . .  B  ADDR  00D2H  NOT USED
P. . . . . . . . . . . . . . . . . .  B  ADDR  00D0H  NOT USED
P0 . . . . . . . . . . . . . . . . .  D  ADDR  0080H
P1 . . . . . . . . . . . . . . . . .  D  ADDR  0090H
P1M1 . . . . . . . . . . . . . . . .  D  ADDR  00D4H  NOT USED
P1M2 . . . . . . . . . . . . . . . .  D  ADDR  00E2H  NOT USED
P2 . . . . . . . . . . . . . . . . .  D  ADDR  00A0H
P3 . . . . . . . . . . . . . . . . .  D  ADDR  00B0H
P3M1 . . . . . . . . . . . . . . . .  D  ADDR  00D5H  NOT USED
P3M2 . . . . . . . . . . . . . . . .  D  ADDR  00E3H  NOT USED
P4 . . . . . . . . . . . . . . . . .  D  ADDR  00C0H  NOT USED
P4M1 . . . . . . . . . . . . . . . .  D  ADDR  00D6H  NOT USED
P4M2 . . . . . . . . . . . . . . . .  D  ADDR  00E4H  NOT USED
P5 . . . . . . . . . . . . . . . . .  D  ADDR  00E8H  NOT USED
PC . . . . . . . . . . . . . . . . .  B  ADDR  00BEH  NOT USED
PCON . . . . . . . . . . . . . . . .  D  ADDR  0087H  NOT USED
PPCL . . . . . . . . . . . . . . . .  B  ADDR  00BEH  NOT USED
PS . . . . . . . . . . . . . . . . .  B  ADDR  00BCH  NOT USED
PSL. . . . . . . . . . . . . . . . .  B  ADDR  00BCH  NOT USED
PSW. . . . . . . . . . . . . . . . .  D  ADDR  00D0H  NOT USED
PT0. . . . . . . . . . . . . . . . .  B  ADDR  00B9H  NOT USED
PT0L . . . . . . . . . . . . . . . .  B  ADDR  00B9H  NOT USED
PT1. . . . . . . . . . . . . . . . .  B  ADDR  00BBH  NOT USED
PT1L . . . . . . . . . . . . . . . .  B  ADDR  00BBH  NOT USED
PT2. . . . . . . . . . . . . . . . .  B  ADDR  00BDH  NOT USED
PT2L . . . . . . . . . . . . . . . .  B  ADDR  00BDH  NOT USED
PX0. . . . . . . . . . . . . . . . .  B  ADDR  00B8H  NOT USED
PX0L . . . . . . . . . . . . . . . .  B  ADDR  00B8H  NOT USED
PX1. . . . . . . . . . . . . . . . .  B  ADDR  00BAH  NOT USED
PX1L . . . . . . . . . . . . . . . .  B  ADDR  00BAH  NOT USED
RB8. . . . . . . . . . . . . . . . .  B  ADDR  009AH  NOT USED
RCAP2H . . . . . . . . . . . . . . .  D  ADDR  00CBH  NOT USED
RCAP2L . . . . . . . . . . . . . . .  D  ADDR  00CAH  NOT USED
RCLK . . . . . . . . . . . . . . . .  B  ADDR  00CDH  NOT USED
RD . . . . . . . . . . . . . . . . .  B  ADDR  00B7H  NOT USED
REN. . . . . . . . . . . . . . . . .  B  ADDR  009CH  NOT USED
RESET. . . . . . . . . . . . . . . .  C  ADDR  0000H  NOT USED
RI . . . . . . . . . . . . . . . . .  B  ADDR  0098H  NOT USED
RS0. . . . . . . . . . . . . . . . .  B  ADDR  00D3H  NOT USED
RS1. . . . . . . . . . . . . . . . .  B  ADDR  00D4H  NOT USED
RXD. . . . . . . . . . . . . . . . .  B  ADDR  00B0H  NOT USED
SADDR. . . . . . . . . . . . . . . .  D  ADDR  00A9H  NOT USED
SADDR_0. . . . . . . . . . . . . . .  D  ADDR  00A9H  NOT USED
SADDR_1. . . . . . . . . . . . . . .  D  ADDR  00AAH  NOT USED
SADEN. . . . . . . . . . . . . . . .  D  ADDR  00B9H  NOT USED
SADEN_0. . . . . . . . . . . . . . .  D  ADDR  00B9H  NOT USED
SADEN_1. . . . . . . . . . . . . . .  D  ADDR  00BAH  NOT USED
SBUF . . . . . . . . . . . . . . . .  D  ADDR  0099H  NOT USED
SCON . . . . . . . . . . . . . . . .  D  ADDR  0098H  NOT USED
SCORE. . . . . . . . . . . . . . . .  N  NUMB  0003H
SEGMENT_TABLE. . . . . . . . . . . .  C  ADDR  00F5H
SHIFT_BLOCK_POS. . . . . . . . . . .  C  ADDR  001AH
SHOW_SCORE_0 . . . . . . . . . . . .  C  ADDR  00D5H
SHOW_SCORE_1 . . . . . . . . . . . .  C  ADDR  00E0H
SHOW_SCORE_2 . . . . . . . . . . . .  C  ADDR  00EBH
SINT . . . . . . . . . . . . . . . .  C  ADDR  0023H  NOT USED
SM0. . . . . . . . . . . . . . . . .  B  ADDR  009FH  NOT USED
SM1. . . . . . . . . . . . . . . . .  B  ADDR  009EH  NOT USED
SM2. . . . . . . . . . . . . . . . .  B  ADDR  009DH  NOT USED
SP . . . . . . . . . . . . . . . . .  D  ADDR  0081H  NOT USED
SPCON. . . . . . . . . . . . . . . .  D  ADDR  00C3H  NOT USED
SPCR . . . . . . . . . . . . . . . .  D  ADDR  00D5H  NOT USED
SPDAT. . . . . . . . . . . . . . . .  D  ADDR  00C5H  NOT USED
SPDR . . . . . . . . . . . . . . . .  D  ADDR  0086H  NOT USED
SPSR . . . . . . . . . . . . . . . .  D  ADDR  00AAH  NOT USED
SPSTA. . . . . . . . . . . . . . . .  D  ADDR  00C4H  NOT USED
T0 . . . . . . . . . . . . . . . . .  B  ADDR  00B4H  NOT USED
T1 . . . . . . . . . . . . . . . . .  B  ADDR  00B5H  NOT USED
T2CON. . . . . . . . . . . . . . . .  D  ADDR  00C8H  NOT USED
T2MOD. . . . . . . . . . . . . . . .  D  ADDR  00C9H  NOT USED
TB8. . . . . . . . . . . . . . . . .  B  ADDR  009BH  NOT USED
TCLK . . . . . . . . . . . . . . . .  B  ADDR  00CCH  NOT USED
TCON . . . . . . . . . . . . . . . .  D  ADDR  0088H  NOT USED
TF0. . . . . . . . . . . . . . . . .  B  ADDR  008DH  NOT USED
TF1. . . . . . . . . . . . . . . . .  B  ADDR  008FH  NOT USED
TF2. . . . . . . . . . . . . . . . .  B  ADDR  00CFH  NOT USED
TH0. . . . . . . . . . . . . . . . .  D  ADDR  008CH  NOT USED
TH1. . . . . . . . . . . . . . . . .  D  ADDR  008DH  NOT USED
TH2. . . . . . . . . . . . . . . . .  D  ADDR  00CDH  NOT USED
TI . . . . . . . . . . . . . . . . .  B  ADDR  0099H  NOT USED
TIMER0 . . . . . . . . . . . . . . .  C  ADDR  000BH  NOT USED
TIMER1 . . . . . . . . . . . . . . .  C  ADDR  001BH  NOT USED
TIMER2 . . . . . . . . . . . . . . .  C  ADDR  002BH  NOT USED
TL0. . . . . . . . . . . . . . . . .  D  ADDR  008AH  NOT USED
TL1. . . . . . . . . . . . . . . . .  D  ADDR  008BH  NOT USED
TL2. . . . . . . . . . . . . . . . .  D  ADDR  00CCH  NOT USED
TMOD . . . . . . . . . . . . . . . .  D  ADDR  0089H  NOT USED
TR0. . . . . . . . . . . . . . . . .  B  ADDR  008CH  NOT USED
TR1. . . . . . . . . . . . . . . . .  B  ADDR  008EH  NOT USED
TR2. . . . . . . . . . . . . . . . .  B  ADDR  00CAH  NOT USED
TXD. . . . . . . . . . . . . . . . .  B  ADDR  00B1H  NOT USED
UPDATE_AIRTIME . . . . . . . . . . .  C  ADDR  0022H
VAR. . . . . . . . . . . . . . . . .  N  NUMB  0020H  NOT USED
WDTCON . . . . . . . . . . . . . . .  D  ADDR  00A7H  NOT USED
WDTPRG . . . . . . . . . . . . . . .  D  ADDR  00A7H  NOT USED
WDTRST . . . . . . . . . . . . . . .  D  ADDR  00A6H  NOT USED
WR . . . . . . . . . . . . . . . . .  B  ADDR  00B6H  NOT USED